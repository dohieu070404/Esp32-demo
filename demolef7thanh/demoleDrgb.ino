#include <ESP8266WiFi.h>

// Th√¥ng tin WiFi
const char* ssid = "P502_vtv";         // üîπ Nh·∫≠p t√™n WiFi
const char* password = "123456789"; // üîπ Nh·∫≠p m·∫≠t kh·∫©u WiFi

// T·∫°o server web tr√™n c·ªïng 80
WiFiServer server(80);

// Ch√¢n ƒëi·ªÅu khi·ªÉn LED RGB
const int pinRed = 12;   // Ch√¢n R (ƒê·ªè)
const int pinGreen = 13; // Ch√¢n G (Xanh l√°)
const int pinBlue = 14;  // Ch√¢n B (Xanh d∆∞∆°ng)

// Tr·∫°ng th√°i m√†u
String redState = "OFF";
String greenState = "OFF";
String blueState = "OFF";

void setup() {
    Serial.begin(115200);
    
    // C·∫•u h√¨nh c√°c ch√¢n RGB l√† OUTPUT
    pinMode(pinRed, OUTPUT);
    pinMode(pinGreen, OUTPUT);
    pinMode(pinBlue, OUTPUT);

    // T·∫Øt LED ban ƒë·∫ßu (Common Anode: HIGH = T·∫Øt)
    digitalWrite(pinRed, HIGH);
    digitalWrite(pinGreen, HIGH);
    digitalWrite(pinBlue, HIGH);

    // K·∫øt n·ªëi WiFi
    Serial.print("ƒêang k·∫øt n·ªëi WiFi...");
    WiFi.begin(ssid, password);
    while (WiFi.status() != WL_CONNECTED) {
        delay(500);
        Serial.print(".");
    }

    // K·∫øt n·ªëi th√†nh c√¥ng
    Serial.println("\n‚úÖ WiFi ƒë√£ k·∫øt n·ªëi!");
    Serial.print("üì° ƒê·ªãa ch·ªâ IP: ");
    Serial.println(WiFi.localIP()); // L·∫•y ƒë·ªãa ch·ªâ IP

    server.begin(); // Kh·ªüi ƒë·ªông server
}

void loop() {
    WiFiClient client = server.available(); // Ch·ªù k·∫øt n·ªëi t·ª´ client

    if (client) { 
        Serial.println("üîó Client k·∫øt n·ªëi!");
        String header = "";
        String currentLine = "";

        while (client.connected()) {  
            if (client.available()) {  
                char c = client.read();
                header += c;
                if (c == '\n') { 
                    if (currentLine.length() == 0) {  
                        client.println("HTTP/1.1 200 OK");
                        client.println("Content-type:text/html");
                        client.println("Connection: close");
                        client.println();

                        // X·ª≠ l√Ω ƒëi·ªÅu khi·ªÉn LED
                        if (header.indexOf("GET /red/on") >= 0) {
                            Serial.println("üî¥ Red ON");
                            redState = "ON";
                            digitalWrite(pinRed, LOW);
                        } else if (header.indexOf("GET /red/off") >= 0) {
                            Serial.println("üî¥ Red OFF");
                            redState = "OFF";
                            digitalWrite(pinRed, HIGH);
                        }
                        if (header.indexOf("GET /green/on") >= 0) {
                            Serial.println("üü¢ Green ON");
                            greenState = "ON";
                            digitalWrite(pinGreen, LOW);
                        } else if (header.indexOf("GET /green/off") >= 0) {
                            Serial.println("üü¢ Green OFF");
                            greenState = "OFF";
                            digitalWrite(pinGreen, HIGH);
                        }
                        if (header.indexOf("GET /blue/on") >= 0) {
                            Serial.println("üîµ Blue ON");
                            blueState = "ON";
                            digitalWrite(pinBlue, LOW);
                        } else if (header.indexOf("GET /blue/off") >= 0) {
                            Serial.println("üîµ Blue OFF");
                            blueState = "OFF";
                            digitalWrite(pinBlue, HIGH);
                        }

                        // Giao di·ªán web
                        client.println("<!DOCTYPE html><html>");
                        client.println("<head><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">");
                        client.println("<link rel=\"icon\" href=\"data:,\">");
                        client.println("<style>");
                        client.println("html { font-family: Arial; text-align: center; }");
                        client.println(".button { padding: 15px 30px; font-size: 18px; margin: 10px; cursor: pointer; }");
                        client.println(".red { background-color: red; color: white; }");
                        client.println(".green { background-color: green; color: white; }");
                        client.println(".blue { background-color: blue; color: white; }");
                        client.println(".off { background-color: gray; color: white; }");
                        client.println("</style></head>");

                        client.println("<body>");
                        client.println("<h1>üöÄ ƒêi·ªÅu khi·ªÉn LED RGB</h1>");

                        // N√∫t ƒëi·ªÅu khi·ªÉn LED Red
                        client.println("<p>üî¥ LED ƒê·ªé - Tr·∫°ng th√°i: " + redState + "</p>");
                        if (redState == "OFF") {
                            client.println("<a href=\"/red/on\"><button class=\"button red\">B·∫¨T</button></a>");
                        } else {
                            client.println("<a href=\"/red/off\"><button class=\"button off\">T·∫ÆT</button></a>");
                        }

                        // N√∫t ƒëi·ªÅu khi·ªÉn LED Green
                        client.println("<p>üü¢ LED XANH L√Å - Tr·∫°ng th√°i: " + greenState + "</p>");
                        if (greenState == "OFF") {
                            client.println("<a href=\"/green/on\"><button class=\"button green\">B·∫¨T</button></a>");
                        } else {
                            client.println("<a href=\"/green/off\"><button class=\"button off\">T·∫ÆT</button></a>");
                        }

                        // N√∫t ƒëi·ªÅu khi·ªÉn LED Blue
                        client.println("<p>üîµ LED XANH D∆Ø∆†NG - Tr·∫°ng th√°i: " + blueState + "</p>");
                        if (blueState == "OFF") {
                            client.println("<a href=\"/blue/on\"><button class=\"button blue\">B·∫¨T</button></a>");
                        } else {
                            client.println("<a href=\"/blue/off\"><button class=\"button off\">T·∫ÆT</button></a>");
                        }

                        client.println("</body></html>");
                        client.println();
                        break;
                    } else {  
                        currentLine = "";
                    }
                } else if (c != '\r') { 
                    currentLine += c;
                }
            }
        }
        
        header = "";
        client.stop();
        Serial.println("‚ùå Client ƒë√£ ng·∫Øt k·∫øt n·ªëi.");
    }
}
